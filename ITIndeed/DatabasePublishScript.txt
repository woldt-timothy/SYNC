/*
Deployment script for woldt

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "woldt"
:setvar DefaultFilePrefix "woldt"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
DROP TABLE IF EXISTS dbo.tblEmployer
DROP TABLE IF EXISTS dbo.tblEvent
DROP TABLE IF EXISTS dbo.tblEventShowing
DROP TABLE IF EXISTS dbo.tblStudent
DROP TABLE IF EXISTS dbo.tblUser

GO

GO
PRINT N'Creating [dbo].[tblEmployer]...';


GO
CREATE TABLE [dbo].[tblEmployer]
(
		[Id] UNIQUEIDENTIFIER NOT NULL PRIMARY KEY, 
    [RepresentativeFirstName] VARCHAR(50) NOT NULL, 
    [RepresentativeLastName] VARCHAR(50) NOT NULL, 
    [Phone] VARCHAR(50) NULL, 
    [Email] VARCHAR(50) NOT NULL, 
    [UserId] UNIQUEIDENTIFIER NOT NULL, 
    [OrganizationName] VARCHAR(100) NOT NULL, 
    [Industry] VARCHAR(100) NOT NULL,
	[ProfilePicture] VARBINARY(MAX) NULL
);


GO
PRINT N'Creating [dbo].[tblEvent]...';


GO
CREATE TABLE [dbo].[tblEvent]
(
	[Id] UNIQUEIDENTIFIER NOT NULL PRIMARY KEY, 
    [Name] VARCHAR(50) NOT NULL, 
    [Type] VARCHAR(50) NOT NULL, 
    [StartDate] DATETIME NOT NULL, 
    [EndDate] DATETIME NOT NULL
);


GO
PRINT N'Creating [dbo].[tblEventShowing]...';


GO
CREATE TABLE [dbo].[tblEventShowing]
(
	[Id] UNIQUEIDENTIFIER NOT NULL PRIMARY KEY, 
    [UserId] UNIQUEIDENTIFIER NOT NULL, 
    [EventId] UNIQUEIDENTIFIER NOT NULL
);


GO
PRINT N'Creating [dbo].[tblStudent]...';


GO
CREATE TABLE [dbo].[tblStudent]
(
	[Id] UNIQUEIDENTIFIER NOT NULL PRIMARY KEY, 
    [StudentFirstName] VARCHAR(50) NOT NULL, 
    [StudentLastName] VARCHAR(50) NOT NULL, 
    [Phone] VARCHAR(50) NULL, 
    [Email] VARCHAR(50) NOT NULL, 
    [School] VARCHAR(50) NOT NULL, 
    [Field] VARCHAR(50) NOT NULL, 
    [UserId] UNIQUEIDENTIFIER NOT NULL,
	[ProfilePicture] VARBINARY(MAX) NULL
);




GO
PRINT N'Creating [dbo].[tblUser]...';


GO
CREATE TABLE [dbo].[tblUser]
(
	[Id] UNIQUEIDENTIFIER NOT NULL PRIMARY KEY, 
    [UserName] VARCHAR(50) NOT NULL, 
    [Password] VARCHAR(50) NOT NULL
);



GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

BEGIN
	INSERT INTO [dbo].[tblEmployer] (Id, RepresentativeFirstName,RepresentativeLastName,Phone,Email,UserId, OrganizationName, Industry, ProfilePicture)
	VALUES
	(NEWID(), 'Alex', 'Smith','(920)111-1111','alex@bemis.com',@eUserId1,'Bemis Company','Manufacturing', 'employerprofilepicture.jpg'),
	(NEWID(), 'Jess', 'Jones','(920)222-2222','jess@oshkoshtruck.com',@eUserId2, 'Oshkosh Truck', 'Manufacturing','employerprofilepicture.jpg'),
	(NEWID(), 'Abby', 'Williams','(920)333-3333','abby@thrivent.com',@eUserId3, 'Thrivent Financial', 'Finance', 'employerprofilepicture.jpg')
END
BEGIN
	INSERT INTO [dbo].tblEvent(Id,Name,Type,StartDate,EndDate)
	VALUES
	(NEWID(), 'Coffee at Starbucks', 'meetup','05/29/2015 05:00','05/29/2015 06:00'),
	(NEWID(), 'X Networking Event','networking event','04/29/2015 02:00','04/29/2015 05:00'),
	(NEWID(), 'Lunch with x Employer', 'meetup','03/29/2015 01:00','03/29/2015 02:00')
END
BEGIN
	INSERT INTO [dbo].tblEventShowing(Id,UserId,EventId)
	VALUES
	(NEWID(), NEWID(), NEWID()),
	(NEWID(), NEWID(), NEWID()),
	(NEWID(), NEWID(), NEWID())
END
BEGIN
	INSERT INTO [dbo].tblStudent(Id, StudentFirstName,StudentLastName,Phone,Email,School,Field,UserId, ProfilePicture)
	VALUES
	(NEWID(), 'Amy', 'Adams','(920)444-4444','amy@email.com','FVTC', 'Networking', @sUserId1, 'studentprofilepicture.jpg'),
	(NEWID(), 'Bob', 'Ross','(920)555-5555','bob@email.com','FVTC', 'User Support',@sUserId2, 'studentprofilepicture.jpg'),
	(NEWID(), 'Daryll', 'Kay','(920)666-6666','daryll@email.com','FVTC', 'UI/UX', @sUserId3, 'studentprofilepicture.jpg')
END
BEGIN
	INSERT INTO [dbo].tblUser(Id,Username,Password)
	VALUES
	(NEWID(), 'alex1', 'password1'),
	(NEWID(), 'jess2', 'password2'),
	(NEWID(), 'abby3', 'password3'),
	(NEWID(), 'amy4', 'password4'),
	(NEWID(), 'bob5', 'password5'),
	(NEWID(), 'daryll6', 'password6')
END
GO

GO
PRINT N'Update complete.';


GO
